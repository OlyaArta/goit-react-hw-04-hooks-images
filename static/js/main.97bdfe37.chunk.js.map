{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/services/basic.js","components/services/API.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Loader/Loader.js","components/Button/Button.js","components/App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","event","preventDefault","trim","toast","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","BASE_URL","API_KEY","page","a","url","axios","get","data","console","log","hits","fetchImages","ImageGalleryItem","webformatURL","largeImageURL","onClick","src","alt","ImageGalleryItemImage","ImageGallery","img","clickImages","map","id","modalRoot","document","querySelector","Modal","largeImage","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","target","Spinner","color","height","width","timeout","Button","App","images","setImages","setPage","showModal","setShowModal","loading","setLoading","setLargeImage","prevImages","error","message","theme","scrollTo","top","documentElement","scrollHeight","behavior","example","cleanPage","length","modalImg","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97bdfe37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__39pZ6\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3mdGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__FwAU3\",\"Modal\":\"Modal_Modal__33UfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3k1mJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2paGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__36kdR\",\"SearchForm\":\"Searchbar_SearchForm__3owqr\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1hwo0\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1G_YF\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1vm67\"};","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport s from \"./Searchbar.module.css\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => {\r\n    setSearchQuery(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n      toast(\"Empty input!\");\r\n      return;\r\n    }\r\n    onSubmit(searchQuery);\r\n    setSearchQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={searchQuery}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","const BASE_URL = \"https://pixabay.com/api\";\r\nconst API_KEY = \"22999065-3fa49f66c111c7f1f9c9e2a79\";\r\n\r\nexport { BASE_URL, API_KEY };\r\n","import { BASE_URL, API_KEY } from \"../services/basic\";\r\nimport axios from \"axios\";\r\n\r\nasync function fetchImages(searchQuery, page) {\r\n  const url = `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  const { data } = await axios.get(url);\r\n  console.log(data);\r\n\r\n  return data.hits;\r\n}\r\n\r\n// function fetchImages(searchQuery, page) {\r\n//   const url = `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n//   return fetch(url)\r\n//     .then((response) => response.json())\r\n//     .then(({ hits }) => {\r\n//       console.log(\"hits\", hits);\r\n//       return hits;\r\n//     });\r\n// }\r\n\r\nexport default fetchImages;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ImageGalleryItem.module.css\";\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  largeImageURL,\r\n  onClick,\r\n}) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={largeImageURL}\r\n        className={s.ImageGalleryItemImage}\r\n        onClick={onClick}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\n// const ImageGalleryItem = ({ image, tags }) => {\r\n//   return (\r\n//     <li className={s.ImageGalleryItem}>\r\n//       <img src={image} alt={tags} className={s.ImageGalleryItemImage} />\r\n//     </li>\r\n//   );\r\n// };\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport s from \"./ImageGallery.module.css\";\r\n\r\nfunction ImageGallery({ img, clickImages }) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {img.map(({ id, webformatURL, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          onClick={clickImages}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  img: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  clickImages: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport s from \"./Modal.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ onClick, largeImage }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n  // componentDidMount() {\r\n  //   // console.log(\"sds\");\r\n  //   window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  // }\r\n\r\n  // componentWillUnmount() {\r\n  //   // console.log(\"saas\");\r\n  //   window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  // }\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClose = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClose}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImage} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default function Spinner() {\r\n  //other logic\r\n\r\n  return (\r\n    <Loader\r\n      type=\"TailSpin\"\r\n      color=\"#00BFFF\"\r\n      height={80}\r\n      width={80}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Button.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport Searchbar from \"./Searchbar/Searchbar.js\";\nimport fetchImages from \"./services/API\";\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\nimport Modal from \"./Modal/Modal\";\nimport Spinner from \"./Loader/Loader\";\nimport Button from \"./Button/Button\";\n\nexport default function App() {\n  // state = {\n  //   searchQuery: \"\",\n  //   images: [],\n  //   page: 1,\n  //   showModal: false,\n  //   loading: false,\n  //   largeImage: \"\",\n  // };\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [largeImage, setLargeImage] = useState(\"\");\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    async function example() {\n      try {\n        setLoading(true);\n        const images = await fetchImages(searchQuery, page);\n        setImages((prevImages) => [...prevImages, ...images]);\n      } catch (error) {\n        // setError(error);\n        toast.error(error.message, { theme: \"colored\" });\n      } finally {\n        if (page > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      }\n      setLoading(false);\n    }\n    example();\n  }, [searchQuery, page]);\n\n  // async componentDidUpdate(prevProps, prevState) {\n  //   const prevSearch = prevState.searchQuery;\n  //   const nextSearch = this.state.searchQuery;\n\n  //   const prevPage = prevState.page;\n  //   const nextPage = this.state.page;\n\n  //   if (prevSearch !== nextSearch || prevPage !== nextPage) {\n  //     try {\n  //       setLoading(true);\n  //       const images = await fetchImages(nextSearch, nextPage);\n\n  //       this.setState((prevState) => ({\n  //         images: [...prevState.images, ...images],\n  //       }));\n  //     } catch (error) {\n  //       // this.setState({ error });\n  //       setError(error);\n  //       toast.error(error.message, { theme: \"colored\" });\n  //     } finally {\n  //       if (prevState.images.length > 5) {\n  //         window.scrollTo({\n  //           top: document.documentElement.scrollHeight,\n  //           behavior: \"smooth\",\n  //         });\n  //       }\n  //     }\n  //     setLoading(false);\n  //   }\n  // }\n\n  function handleFormSubmit(searchQuery) {\n    cleanPage();\n    // this.setState({ searchQuery });\n    setSearchQuery(searchQuery);\n  }\n\n  const cleanPage = () => {\n    setSearchQuery(\"\");\n    setPage(1);\n    setImages([]);\n    setShowModal(false);\n  };\n\n  const loadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  // openModal = (largeImageUrl, tags) => {\n  //   this.setState({ alt: tags, showModal: true });\n  // };\n\n  // closeModal = () => {\n  //   this.setState({ showModal: false });\n  // };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const clickImages = (e) => {\n    const modalImg = e.currentTarget.alt;\n    // this.setState({ showModal: true, largeImage: modalImg });\n    setShowModal(true);\n    setLargeImage(modalImg);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleFormSubmit} />\n      {images.length > 0 && (\n        <ImageGallery img={images} clickImages={clickImages} />\n      )}\n      {images.length > 1 && <Button onClick={loadMore} />}\n      {showModal && <Modal onClick={toggleModal} largeImage={largeImage} />}\n      {loading && <Spinner />}\n      <ToastContainer autoClose={2500} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}